module=$(echo $0 | awk -F '/' '{print $NF}' | sed "s/\.[^\.]*$//g")
target=$1
function smbversion() {
        rhost=$1
        sudo tcpdump -s0 -n src $rhost and port 139 -A -c 10 2>/dev/null | grep -i "samba\|s.a.m\|pipe" | sed 's/\.\.\./\-/g' | tr -d '.' | sed 's/\([0-9]\)\-/\1\./g' | sed 's/\([0-9]\)\.\([a-zA-Z]\)/\1\-\2/g' | sed 's/\-/ /g' | sed 's/  /\n/g' | sed 's/^[ ]*//g' | sort -u & echo -n "$rhost: " &
        echo "exit" | smbclient -L $rhost 1>/dev/null 2>/dev/null
        echo "" && sleep 2
}
#NMAP PARSE SERVICES PARSE AND IP-DOMAINS list
echo -e "Parsing services and hostnames from nmap execution for "$target
resultsfolder=$2$(echo $target | sed 's/\//-/g')/$3/$module
mkdir $resultsfolder
if [[ ! -f $resultsfolder/../tmp/nmap-tcp-target.gnmap ]] && [[ ! -f $resultsfolder/../tmp/nmap-udp-target.gnmap ]]; then
	echo "This module can't work without one of the following files: "
	echo "- $resultsfolder/../tmp/nmap-tcp-target.gnmap"
	echo "- $resultsfolder/../tmp/nmap-udp-target.gnmap"
	echo "If you want to this with the script, execute module port_recon first"
	exit
fi
uniqueservicestcp=$(cat $resultsfolder/../tmp/nmap-tcp-target.gnmap | grep Ports: | sed 's/, /\n/g' | sed 's/.*Ports: //g' | awk -F'/' '{print $5}' | sort -u)
for host in $(cat $resultsfolder/../tmp/nmap-tcp-target.gnmap | grep Ports: | awk -F' ' '{print $2}'| sort -u)
do
 	cat $resultsfolder/../tmp/nmap-tcp-target.gnmap | grep $host | grep Ports | sed -e 's/.*Ports: //g' -e 's/, /\n/g' | sed -e s/^/$host,/g -e 's/\/open\/tcp\/\//,/g' -e 's/\/\//,/g' -e 's/\/$//g' | sed -e "s/\/        Ignored State:.*//g" >> $resultsfolder/full-nmap-parsed-tcp.txt
done
uniqueservicesudp=$(cat $resultsfolder/../tmp/nmap-udp-target.gnmap | grep Ports | sed 's/, /\n/g' | sed 's/.*Ports: //g' | awk -F'/' '{print $5}' | sed 's/|/-/g' | sort -u)
for host in $(cat $resultsfolder/../tmp/nmap-udp-target.gnmap | grep Ports: | awk -F' ' '{print $2}' | sort -u)
do
 	cat $resultsfolder/../tmp/nmap-udp-target.gnmap | grep $host | grep Ports | sed -e 's/.*Ports: //g' -e 's/, /\n/g' | sed -e s/^/$host,/g -e 's/\/[a-z]*\/udp\/\//,/g' -e 's/\/\//,/g' -e 's/\/$//g' | sed -e "s/\/        Ignored State:.*//g" >> $resultsfolder/full-nmap-parsed-udp.txt 
done
mkdir $resultsfolder/services
for servicetcp in $(echo $uniqueservicestcp)
do
	cat $resultsfolder/full-nmap-parsed-tcp.txt | grep ",$servicetcp," >> $resultsfolder/services/tcp-$(echo $servicetcp | sed 's/|/-/g' | tr -d '?')-service.txt
done
for serviceudp in $(echo $uniqueservicesudp)
do
 	cat $resultsfolder/full-nmap-parsed-udp.txt | grep ",$serviceudp," >> $resultsfolder/services/udp-$(echo $serviceudp | sed 's/|/-/g' | tr -d '?')-service.txt
done
hosts=$(cat $resultsfolder/../tmp/nmap-*-target.gnmap | grep Ports: | awk -F' ' '{print $2}' | sort -u)
for host in $(echo $hosts)
do
	smb445hosts=$(cat $resultsfolder/services/tcp-*-service.txt | grep "$host," | grep ",445," | awk -F',' '{print $1}' | sort -u)
	ldap389=$(cat $resultsfolder/services/tcp-*-service.txt | grep "$host," | grep ",389," | awk -F',' '{print $1}' | sort -u)
	dnsnames=$(echo $(dig -x $host | grep PTR | awk -F 'PTR' '{print $2}' | tr -d '     ' | sed 's/\.$//g' | grep [a-zA-Z0-9])","$(host $host | grep -v "not found" | grep -v "timed out" | awk -F ' ' '{print $5}' | sed 's/\.$//g' | grep [a-zA-Z0-9] | sed 's/$/,/g' | tr -d '\n' | sed 's/,$//g'))
	if [[ "$smb445hosts" != "" ]]; then
		dnsnames=$(echo $(crackmapexec smb $host | sed -e s/.*name://g -e s/\).*\(domain:/,/g -e s/\).*//g)","$(crackmapexec smb $host | sed -e s/.*name://g -e s/\).*\(domain:/./g -e s/\).*//g)","$dnsnames)
	fi
	if [[ "$ldap389" != "" ]]; then
		dnsnames=$(echo $(crackmapexec ldap $host | sed -e s/.*name://g -e s/\).*\(domain:/,/g -e s/\).*//g)","$(crackmapexec ldap $host | sed -e s/.*name://g -e s/\).*\(domain:/./g -e s/\).*//g)","$dnsnames)
	fi
	dnsnames=$(echo $dnsnames","$(cat $resultsfolder/../tmp/nmap-tcp-target.xml | grep "addr=\|hostname " | awk -F '"' '{print $2}' | sed 's/$/,/g' | tr -d '\n' | sed 's/,$//g' | sed 's/,\([0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\)/\n\1/g' | grep "$host," | sed 's/^[^,]*,//g' | sort -u  | sed 's/$/,/g' | tr -d '\n' | sed 's/,$//g'))
	for hostname in $(cat $resultsfolder/../targets.txt | sort -u)
        do
                dnsnames=$(echo $(host $hostname | grep $host | grep address | grep -v IPv6 | awk '{ print $1}')","$dnsnames)
        done
	dnsnames=$(echo $dnsnames | sed 's/,/\n/g' | grep [a-zA-Z0-9] | grep -v "NXDOMAIN" | sort -u | sed 's/$/,/g' | tr -d '\n' | sed 's/,$//g')
	if [[ "$dnsnames" != "" ]]; then
		echo $host","$dnsnames >> $resultsfolder/ips-with-domains.txt
	else
		echo $host >> $resultsfolder/ips-with-domains.txt
	fi
done

#SMB Scan
echo -e "Generating SMB files from scan for "$target
smb139hosts=$(cat $resultsfolder/services/tcp-*-service.txt | grep ",139," | awk -F',' '{print $1}' | sort -u)
smb445hosts=$(cat $resultsfolder/services/tcp-*-service.txt | grep ",445," | awk -F',' '{print $1}' | sort -u)
if [[ "$smb139hosts" != "" ]]; then
	mkdir $resultsfolder/smbversion
	for smb139host in $(echo $smb139hosts)
	do
 		smbversion $smb139host > $resultsfolder/smbversion/$smb139host-smbversion.txt 
	done 
fi
if [[ "$smb445hosts" != "" ]]; then
	mkdir $resultsfolder/smbmap
	mkdir $resultsfolder/enum4linux
	for smb445host in $(echo $smb445hosts)
	do
		smbmap -u ' ' -p '' -H $smb445host > $resultsfolder/smbmap/$smb445host-smbmap.txt 
		enum4linux -U -S -G -P -o -n -i -l $smb445host > $resultsfolder/enum4linux/$smb445host-enum4linux.txt 
	done 
fi

#DNS Scan
echo -e "Generating DNS files from scan for "$target
dnshosts=$(cat $resultsfolder/services/*-service.txt | grep ",53," | awk -F',' '{print $1}' | sort -u)
cd $resultsfolder
if [[ "$dnshosts" != "" ]]; then
	mkdir $resultsfolder/dnsrecon
	for dnshost in $(echo $dnshosts)
	do
		smb445hosts=$(cat $resultsfolder/services/tcp-*-service.txt | grep $dnshost | grep ",445," | awk -F',' '{print $1}' | sort -u)
		ldap389=$(cat $resultsfolder/services/tcp-*-service.txt | grep $dnshost | grep ",389," | awk -F',' '{print $1}' | sort -u)
		dnsnames=$(echo $(dig -x $dnshost @$dnshost | grep PTR | awk -F 'PTR' '{print $2}' | tr -d '     ' | sed 's/\.$//g' | grep [a-zA-Z0-9])","$(host $dnshost | grep -v "not found" | awk -F ' ' '{print $5}' | sed 's/\.$//g' | grep [a-zA-Z0-9]))
		if [[ "$smb445hosts" != "" ]]; then
			dnsnames=$(echo $(crackmapexec smb $dnshost | sed -e s/.*name://g -e s/\).*\(domain:/,/g -e s/\).*//g)","$(crackmapexec smb $dnshost | sed -e s/.*name://g -e s/\).*\(domain:/./g -e s/\).*//g)","$dnsname)
		fi
		if [[ "$ldap389" != "" ]]; then
			dnsnames=$(echo $(crackmapexec smb $dnshost | sed -e s/.*name://g -e s/\).*\(domain:/,/g -e s/\).*//g)","$(crackmapexec smb $dnshost | sed -e s/.*name://g -e s/\).*\(domain:/./g -e s/\).*//g)","$dnsnames)
		fi
		dnsnames=$(echo $dnsnames | sed 's/,/\n/g' | grep [a-zA-Z0-9] | grep -v "NXDOMAIN" | sort -u)
		if [[ "$dnsnames" != "" ]]; then
			for dnsname in $dnsnames
			do
				dnsrecon -d $dnsname -t axfr -n $dnshost > $resultsfolder/dnsrecon/$dnshost-$dnsname-dnsrecon.txt
			done 
		fi
	done
fi

#CVE SCAN TO-DO (I have nmap -A execution on mind but there could be something more useful)
cp $resultsfolder/ips-with-domains.txt $resultsfolder/../tmp/
cp $resultsfolder/full-nmap-parsed-*.txt $resultsfolder/../tmp/

cp $resultsfolder/services/*-service.txt $resultsfolder/../tmp/
